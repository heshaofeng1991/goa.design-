// Code generated by goa v3.6.2, DO NOT EDIT.
//
// file service
//
// Command:
// $ goa gen goa/design -o ./

package file

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The file service performs operations on file
type Service interface {
	// UploadImage implements upload_image.
	UploadImage(context.Context, *ImageFile) (res *ImageURL, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "file"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"upload_image"}

// ImageFile is the payload type of the file service upload_image method.
type ImageFile struct {
	// file
	File []byte
	// file name
	FileName string
}

// ImageURL is the result type of the file service upload_image method.
type ImageURL struct {
	// image URL
	URL string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
