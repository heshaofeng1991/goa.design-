// Code generated by goa v3.6.2, DO NOT EDIT.
//
// quote HTTP server types
//
// Command:
// $ goa gen goa/design -o ./

package server

import (
	quote "goa/gen/quote"

	goa "goa.design/goa/v3/pkg"
)

// GetResponseBody is the type of the "quote" service "get" endpoint HTTP
// response body.
type GetResponseBody []*QuoteResponse

// GetUnauthorizedResponseBody is the type of the "quote" service "get"
// endpoint HTTP response body for the "Unauthorized" error.
type GetUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// QuoteResponse is used to define fields on response body types.
type QuoteResponse struct {
	// Channel Display Name
	ChannelName string `form:"channel_name" json:"channel_name" xml:"channel_name"`
	// Channel ID
	ChannelID int32 `form:"channel_id" json:"channel_id" xml:"channel_id"`
	// Channel type
	Type int `form:"type" json:"type" xml:"type"`
	// Min Normal Days
	MinNormalDays int32 `form:"min_normal_days" json:"min_normal_days" xml:"min_normal_days"`
	// Max Normal Days
	MaxNormalDays int32 `form:"max_normal_days" json:"max_normal_days" xml:"max_normal_days"`
	// Total cost (decimal(15,2))
	TotalCost float64 `form:"total_cost" json:"total_cost" xml:"total_cost"`
	Currency  string  `form:"currency" json:"currency" xml:"currency"`
	// weight(unit g)
	Weight int `form:"weight" json:"weight" xml:"weight"`
}

// NewGetResponseBody builds the HTTP response body from the result of the
// "get" endpoint of the "quote" service.
func NewGetResponseBody(res []*quote.Quote) GetResponseBody {
	body := make([]*QuoteResponse, len(res))
	for i, val := range res {
		body[i] = marshalQuoteQuoteToQuoteResponse(val)
	}
	return body
}

// NewGetUnauthorizedResponseBody builds the HTTP response body from the result
// of the "get" endpoint of the "quote" service.
func NewGetUnauthorizedResponseBody(res *goa.ServiceError) *GetUnauthorizedResponseBody {
	body := &GetUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewGetQuote builds a quote service get endpoint payload.
func NewGetQuote(originCountry string, destCountry string, destState string, destZipCode string, weight int, length int, width int, height int, productAttributes []string, factory *string, date *string) *quote.GetQuote {
	v := &quote.GetQuote{}
	v.OriginCountry = originCountry
	v.DestCountry = destCountry
	v.DestState = destState
	v.DestZipCode = destZipCode
	v.Weight = weight
	v.Length = length
	v.Width = width
	v.Height = height
	v.ProductAttributes = productAttributes
	v.Factory = factory
	v.Date = date

	return v
}
