// Code generated by goa v3.6.2, DO NOT EDIT.
//
// wix HTTP client CLI support package
//
// Command:
// $ goa gen goa/design -o ./

package client

import (
	"encoding/json"
	"fmt"
	wix "goa/gen/wix"
)

// BuildCallbackWixPayload builds the payload for the wix callback_wix endpoint
// from CLI flags.
func BuildCallbackWixPayload(wixCallbackWixCode string, wixCallbackWixState string, wixCallbackWixInstanceID string) (*wix.WixCallbackArgs, error) {
	var code string
	{
		code = wixCallbackWixCode
	}
	var state *string
	{
		if wixCallbackWixState != "" {
			state = &wixCallbackWixState
		}
	}
	var instanceID string
	{
		instanceID = wixCallbackWixInstanceID
	}
	v := &wix.WixCallbackArgs{}
	v.Code = code
	v.State = state
	v.InstanceID = instanceID

	return v, nil
}

// BuildWebhooksProductsWixPayload builds the payload for the wix
// webhooks_products_wix endpoint from CLI flags.
func BuildWebhooksProductsWixPayload(wixWebhooksProductsWixBody string) (*wix.WebHooksCallBackProducts, error) {
	var err error
	var body WebhooksProductsWixRequestBody
	{
		err = json.Unmarshal([]byte(wixWebhooksProductsWixBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"end_date\": \"Aut esse fugit.\",\n      \"start_date\": \"Est nobis modi iusto reprehenderit.\"\n   }'")
		}
	}
	v := &wix.WebHooksCallBackProducts{
		StartDate: body.StartDate,
		EndDate:   body.EndDate,
	}

	return v, nil
}

// BuildProductsListPayload builds the payload for the wix products_list
// endpoint from CLI flags.
func BuildProductsListPayload(wixProductsListBody string) (*wix.GetProductsListReq, error) {
	var err error
	var body ProductsListRequestBody
	{
		err = json.Unmarshal([]byte(wixProductsListBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"end_date\": \"Dolores dolorem dolorum cumque rerum consequatur.\",\n      \"start_date\": \"Minima aut.\"\n   }'")
		}
	}
	v := &wix.GetProductsListReq{
		StartDate: body.StartDate,
		EndDate:   body.EndDate,
	}

	return v, nil
}

// BuildOrdersListPayload builds the payload for the wix orders_list endpoint
// from CLI flags.
func BuildOrdersListPayload(wixOrdersListBody string) (*wix.GetOrdersListReq, error) {
	var err error
	var body OrdersListRequestBody
	{
		err = json.Unmarshal([]byte(wixOrdersListBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"end_date\": \"Neque sint quia error.\",\n      \"start_date\": \"Voluptatem molestiae officiis aut dolorum velit rem.\"\n   }'")
		}
	}
	v := &wix.GetOrdersListReq{
		StartDate: body.StartDate,
		EndDate:   body.EndDate,
	}

	return v, nil
}
