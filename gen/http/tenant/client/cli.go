// Code generated by goa v3.6.2, DO NOT EDIT.
//
// tenant HTTP client CLI support package
//
// Command:
// $ goa gen goa/design -o ./

package client

import (
	"encoding/json"
	"fmt"
	tenant "goa/gen/tenant"
)

// BuildIntegrationsPayload builds the payload for the tenant integrations
// endpoint from CLI flags.
func BuildIntegrationsPayload(tenantIntegrationsAuthorization string, tenantIntegrationsToken string) (*tenant.AuthToken, error) {
	var authorization *string
	{
		if tenantIntegrationsAuthorization != "" {
			authorization = &tenantIntegrationsAuthorization
		}
	}
	var token *string
	{
		if tenantIntegrationsToken != "" {
			token = &tenantIntegrationsToken
		}
	}
	v := &tenant.AuthToken{}
	v.Authorization = authorization
	v.Token = token

	return v, nil
}

// BuildGetTenantInfoPayload builds the payload for the tenant get_tenant_info
// endpoint from CLI flags.
func BuildGetTenantInfoPayload(tenantGetTenantInfoAuthorization string, tenantGetTenantInfoToken string) (*tenant.AuthToken, error) {
	var authorization *string
	{
		if tenantGetTenantInfoAuthorization != "" {
			authorization = &tenantGetTenantInfoAuthorization
		}
	}
	var token *string
	{
		if tenantGetTenantInfoToken != "" {
			token = &tenantGetTenantInfoToken
		}
	}
	v := &tenant.AuthToken{}
	v.Authorization = authorization
	v.Token = token

	return v, nil
}

// BuildUpdateTenantInfoPayload builds the payload for the tenant
// update_tenant_info endpoint from CLI flags.
func BuildUpdateTenantInfoPayload(tenantUpdateTenantInfoBody string, tenantUpdateTenantInfoAuthorization string, tenantUpdateTenantInfoToken string) (*tenant.TenantInfo, error) {
	var err error
	var body UpdateTenantInfoRequestBody
	{
		err = json.Unmarshal([]byte(tenantUpdateTenantInfoBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"country_code\": \"Libero non temporibus dolore perferendis ut quia.\",\n      \"default_warehouse\": 1626423020,\n      \"prepay_tariff\": true,\n      \"shipping_option\": 1172218393,\n      \"uk_tariff_number\": \"Magni vitae qui.\",\n      \"us_tariff_number\": \"Maxime hic vero.\"\n   }'")
		}
	}
	var authorization *string
	{
		if tenantUpdateTenantInfoAuthorization != "" {
			authorization = &tenantUpdateTenantInfoAuthorization
		}
	}
	var token *string
	{
		if tenantUpdateTenantInfoToken != "" {
			token = &tenantUpdateTenantInfoToken
		}
	}
	v := &tenant.TenantInfo{
		ShippingOption:   body.ShippingOption,
		DefaultWarehouse: body.DefaultWarehouse,
		CountryCode:      body.CountryCode,
		UsTariffNumber:   body.UsTariffNumber,
		UkTariffNumber:   body.UkTariffNumber,
		PrepayTariff:     body.PrepayTariff,
	}
	v.Authorization = authorization
	v.Token = token

	return v, nil
}
