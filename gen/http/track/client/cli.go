// Code generated by goa v3.6.2, DO NOT EDIT.
//
// track HTTP client CLI support package
//
// Command:
// $ goa gen goa/design -o ./

package client

import (
	"fmt"
	track "goa/gen/track"
	"strconv"

	goa "goa.design/goa/v3/pkg"
)

// BuildGetPayload builds the payload for the track get endpoint from CLI flags.
func BuildGetPayload(trackGetTrackingNumber string, trackGetType string) (*track.GetTrack, error) {
	var err error
	var trackingNumber string
	{
		trackingNumber = trackGetTrackingNumber
	}
	var type_ int
	{
		var v int64
		v, err = strconv.ParseInt(trackGetType, 10, 64)
		type_ = int(v)
		if err != nil {
			return nil, fmt.Errorf("invalid value for type_, must be INT")
		}
		if !(type_ == 1 || type_ == 2) {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("type_", type_, []interface{}{1, 2}))
		}
		if err != nil {
			return nil, err
		}
	}
	v := &track.GetTrack{}
	v.TrackingNumber = trackingNumber
	v.Type = type_

	return v, nil
}
