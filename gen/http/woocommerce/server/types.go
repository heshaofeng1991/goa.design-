// Code generated by goa v3.6.2, DO NOT EDIT.
//
// woocommerce HTTP server types
//
// Command:
// $ goa gen goa/design -o ./

package server

import (
	woocommerce "goa/gen/woocommerce"

	goa "goa.design/goa/v3/pkg"
)

// ReturnWoocommerceRequestBody is the type of the "woocommerce" service
// "return_woocommerce" endpoint HTTP request body.
type ReturnWoocommerceRequestBody struct {
	// User ID
	UserID *string `form:"user_id,omitempty" json:"user_id,omitempty" xml:"user_id,omitempty"`
	// Success
	Success *string `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CallbackWoocommerceRequestBody is the type of the "woocommerce" service
// "callback_woocommerce" endpoint HTTP request body.
type CallbackWoocommerceRequestBody struct {
	// key_id
	KeyID *int `form:"key_id,omitempty" json:"key_id,omitempty" xml:"key_id,omitempty"`
	// user_id
	UserID *string `form:"user_id,omitempty" json:"user_id,omitempty" xml:"user_id,omitempty"`
	// consumer_key
	ConsumerKey *string `form:"consumer_key,omitempty" json:"consumer_key,omitempty" xml:"consumer_key,omitempty"`
	// consumer_secret
	ConsumerSecret *string `form:"consumer_secret,omitempty" json:"consumer_secret,omitempty" xml:"consumer_secret,omitempty"`
	// key_permissions
	KeyPermissions *string `form:"key_permissions,omitempty" json:"key_permissions,omitempty" xml:"key_permissions,omitempty"`
}

// ReturnWoocommerceResponseBody is the type of the "woocommerce" service
// "return_woocommerce" endpoint HTTP response body.
type ReturnWoocommerceResponseBody struct {
	// Success
	Success *string `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CallbackWoocommerceResponseBody is the type of the "woocommerce" service
// "callback_woocommerce" endpoint HTTP response body.
type CallbackWoocommerceResponseBody struct {
	// success
	Success bool `form:"success" json:"success" xml:"success"`
}

// RetrieveOrdersResponseBody is the type of the "woocommerce" service
// "retrieve_orders" endpoint HTTP response body.
type RetrieveOrdersResponseBody struct {
	// data
	Data interface{} `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// code
	Code int `form:"code" json:"code" xml:"code"`
	// message
	Message string `form:"message" json:"message" xml:"message"`
}

// RetrieveProductsResponseBody is the type of the "woocommerce" service
// "retrieve_products" endpoint HTTP response body.
type RetrieveProductsResponseBody struct {
	// data
	Data interface{} `form:"data,omitempty" json:"data,omitempty" xml:"data,omitempty"`
	// code
	Code int `form:"code" json:"code" xml:"code"`
	// message
	Message string `form:"message" json:"message" xml:"message"`
}

// ReturnWoocommerceUnauthorizedResponseBody is the type of the "woocommerce"
// service "return_woocommerce" endpoint HTTP response body for the
// "Unauthorized" error.
type ReturnWoocommerceUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// CallbackWoocommerceUnauthorizedResponseBody is the type of the "woocommerce"
// service "callback_woocommerce" endpoint HTTP response body for the
// "Unauthorized" error.
type CallbackWoocommerceUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// RetrieveOrdersUnauthorizedResponseBody is the type of the "woocommerce"
// service "retrieve_orders" endpoint HTTP response body for the "Unauthorized"
// error.
type RetrieveOrdersUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// RetrieveProductsUnauthorizedResponseBody is the type of the "woocommerce"
// service "retrieve_products" endpoint HTTP response body for the
// "Unauthorized" error.
type RetrieveProductsUnauthorizedResponseBody struct {
	// Name is the name of this class of errors.
	Name string `form:"name" json:"name" xml:"name"`
	// ID is a unique identifier for this particular occurrence of the problem.
	ID string `form:"id" json:"id" xml:"id"`
	// Message is a human-readable explanation specific to this occurrence of the
	// problem.
	Message string `form:"message" json:"message" xml:"message"`
	// Is the error temporary?
	Temporary bool `form:"temporary" json:"temporary" xml:"temporary"`
	// Is the error a timeout?
	Timeout bool `form:"timeout" json:"timeout" xml:"timeout"`
	// Is the error a server-side fault?
	Fault bool `form:"fault" json:"fault" xml:"fault"`
}

// NewReturnWoocommerceResponseBody builds the HTTP response body from the
// result of the "return_woocommerce" endpoint of the "woocommerce" service.
func NewReturnWoocommerceResponseBody(res *woocommerce.WoocommerceReturnResult) *ReturnWoocommerceResponseBody {
	body := &ReturnWoocommerceResponseBody{
		Success: res.Success,
	}
	return body
}

// NewCallbackWoocommerceResponseBody builds the HTTP response body from the
// result of the "callback_woocommerce" endpoint of the "woocommerce" service.
func NewCallbackWoocommerceResponseBody(res *woocommerce.WoocommerceCallbackRsp) *CallbackWoocommerceResponseBody {
	body := &CallbackWoocommerceResponseBody{
		Success: res.Success,
	}
	return body
}

// NewRetrieveOrdersResponseBody builds the HTTP response body from the result
// of the "retrieve_orders" endpoint of the "woocommerce" service.
func NewRetrieveOrdersResponseBody(res *woocommerce.Woocommerce) *RetrieveOrdersResponseBody {
	body := &RetrieveOrdersResponseBody{
		Data:    res.Data,
		Code:    res.Code,
		Message: res.Message,
	}
	return body
}

// NewRetrieveProductsResponseBody builds the HTTP response body from the
// result of the "retrieve_products" endpoint of the "woocommerce" service.
func NewRetrieveProductsResponseBody(res *woocommerce.Woocommerce) *RetrieveProductsResponseBody {
	body := &RetrieveProductsResponseBody{
		Data:    res.Data,
		Code:    res.Code,
		Message: res.Message,
	}
	return body
}

// NewReturnWoocommerceUnauthorizedResponseBody builds the HTTP response body
// from the result of the "return_woocommerce" endpoint of the "woocommerce"
// service.
func NewReturnWoocommerceUnauthorizedResponseBody(res *goa.ServiceError) *ReturnWoocommerceUnauthorizedResponseBody {
	body := &ReturnWoocommerceUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewCallbackWoocommerceUnauthorizedResponseBody builds the HTTP response body
// from the result of the "callback_woocommerce" endpoint of the "woocommerce"
// service.
func NewCallbackWoocommerceUnauthorizedResponseBody(res *goa.ServiceError) *CallbackWoocommerceUnauthorizedResponseBody {
	body := &CallbackWoocommerceUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewRetrieveOrdersUnauthorizedResponseBody builds the HTTP response body from
// the result of the "retrieve_orders" endpoint of the "woocommerce" service.
func NewRetrieveOrdersUnauthorizedResponseBody(res *goa.ServiceError) *RetrieveOrdersUnauthorizedResponseBody {
	body := &RetrieveOrdersUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewRetrieveProductsUnauthorizedResponseBody builds the HTTP response body
// from the result of the "retrieve_products" endpoint of the "woocommerce"
// service.
func NewRetrieveProductsUnauthorizedResponseBody(res *goa.ServiceError) *RetrieveProductsUnauthorizedResponseBody {
	body := &RetrieveProductsUnauthorizedResponseBody{
		Name:      res.Name,
		ID:        res.ID,
		Message:   res.Message,
		Temporary: res.Temporary,
		Timeout:   res.Timeout,
		Fault:     res.Fault,
	}
	return body
}

// NewReturnWoocommerceWoocommerceReturnArgs builds a woocommerce service
// return_woocommerce endpoint payload.
func NewReturnWoocommerceWoocommerceReturnArgs(body *ReturnWoocommerceRequestBody) *woocommerce.WoocommerceReturnArgs {
	v := &woocommerce.WoocommerceReturnArgs{
		UserID:  body.UserID,
		Success: body.Success,
	}

	return v
}

// NewCallbackWoocommerceWoocommerceCallbackArgs builds a woocommerce service
// callback_woocommerce endpoint payload.
func NewCallbackWoocommerceWoocommerceCallbackArgs(body *CallbackWoocommerceRequestBody) *woocommerce.WoocommerceCallbackArgs {
	v := &woocommerce.WoocommerceCallbackArgs{
		KeyID:          *body.KeyID,
		UserID:         *body.UserID,
		ConsumerKey:    *body.ConsumerKey,
		ConsumerSecret: *body.ConsumerSecret,
		KeyPermissions: *body.KeyPermissions,
	}

	return v
}

// NewRetrieveOrdersGetWoocommerce builds a woocommerce service retrieve_orders
// endpoint payload.
func NewRetrieveOrdersGetWoocommerce(storeID *int32, platformRefIds []string, authorization *string, token *string) *woocommerce.GetWoocommerce {
	v := &woocommerce.GetWoocommerce{}
	v.StoreID = storeID
	v.PlatformRefIds = platformRefIds
	v.Authorization = authorization
	v.Token = token

	return v
}

// NewRetrieveProductsGetWoocommerce builds a woocommerce service
// retrieve_products endpoint payload.
func NewRetrieveProductsGetWoocommerce(storeID *int32, platformRefIds []string, authorization *string, token *string) *woocommerce.GetWoocommerce {
	v := &woocommerce.GetWoocommerce{}
	v.StoreID = storeID
	v.PlatformRefIds = platformRefIds
	v.Authorization = authorization
	v.Token = token

	return v
}

// ValidateCallbackWoocommerceRequestBody runs the validations defined on
// callback_woocommerce_request_body
func ValidateCallbackWoocommerceRequestBody(body *CallbackWoocommerceRequestBody) (err error) {
	if body.KeyID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("key_id", "body"))
	}
	if body.UserID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user_id", "body"))
	}
	if body.ConsumerKey == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("consumer_key", "body"))
	}
	if body.ConsumerSecret == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("consumer_secret", "body"))
	}
	if body.KeyPermissions == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("key_permissions", "body"))
	}
	return
}
