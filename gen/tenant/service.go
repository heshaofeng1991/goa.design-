// Code generated by goa v3.6.2, DO NOT EDIT.
//
// tenant service
//
// Command:
// $ goa gen goa/design -o ./

package tenant

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// The tenant service performs operations on tenant
type Service interface {
	// Integrations implements integrations.
	Integrations(context.Context, *AuthToken) (res *TenantIntegrations, err error)
	// GetTenantInfo implements get_tenant_info.
	GetTenantInfo(context.Context, *AuthToken) (res *TenantRsp, err error)
	// UpdateTenantInfo implements update_tenant_info.
	UpdateTenantInfo(context.Context, *TenantInfo) (res *UserRsp, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "tenant"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"integrations", "get_tenant_info", "update_tenant_info"}

// AuthToken is the payload type of the tenant service integrations method.
type AuthToken struct {
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// Integration
type IntegrationData struct {
	// NSS store
	Store *string
	// shopify
	Platform *string
	// created_at
	CreatedAt *string
	// updated_at
	IntegrationAt *string
}

type TenantData struct {
	// tenant id
	TenantID *int32
	// tenant code
	TenantCode *string
	// currency
	Currency *string
	// balance
	Balance *float64
	// handling_fee
	HandlingFee *float64
	// preset_channel_ids
	PresetChannelID []int32
	// test_channel_id
	TestChannelID []int32
	// first_inbound_at
	FirstInboundAt *string
	// storage_unit_price
	StorageUnitPrice *float64
	// shipping_option
	ShippingOption *int32
	// default warehouse
	DefaultWarehouse *int32
	// country code of tariff number
	CountryCode *string
	// us tariff number
	UsTariffNumber *string
	// uk tariff number
	UkTariffNumber *string
	// prepay tariff
	PrepayTariff *bool
}

// TenantInfo is the payload type of the tenant service update_tenant_info
// method.
type TenantInfo struct {
	// shipping_option
	ShippingOption *int32
	// default warehouse
	DefaultWarehouse *int32
	// country code of tariff number
	CountryCode *string
	// us tariff number
	UsTariffNumber *string
	// uk tariff number
	UkTariffNumber *string
	// prepay tariff
	PrepayTariff *bool
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// TenantIntegrations is the result type of the tenant service integrations
// method.
type TenantIntegrations struct {
	// List of integrations
	Data []*IntegrationData
	// code
	Code int
	// message
	Message string
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// TenantRsp is the result type of the tenant service get_tenant_info method.
type TenantRsp struct {
	// data
	Data *TenantData
	// code
	Code int
	// message
	Message string
}

type UserData struct {
	// status
	Status int
}

// UserRsp is the result type of the tenant service update_tenant_info method.
type UserRsp struct {
	// data
	Data *UserData
	// code
	Code int
	// message
	Message string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
