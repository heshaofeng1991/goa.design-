// Code generated by goa v3.6.2, DO NOT EDIT.
//
// platform_product service
//
// Command:
// $ goa gen goa/design -o ./

package platformproduct

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// The platform_product service performs operations on platform product
type Service interface {
	// PlatformProduct implements platform_product.
	PlatformProduct(context.Context, *GetListing) (res *MultiPlatformProductRsp, err error)
	// Convert implements convert.
	Convert(context.Context, *ConvertPlatformProductsReq) (res *ConvertPlatformProductsRes, err error)
	// Mappings implements mappings.
	Mappings(context.Context, *UpdateMappingsReq) (res *UpdateMappingsRes, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "platform_product"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [3]string{"platform_product", "convert", "mappings"}

// ConvertPlatformProductsReq is the payload type of the platform_product
// service convert method.
type ConvertPlatformProductsReq struct {
	// platform_product_ids
	PlatformProductIds []int32
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// ConvertPlatformProductsRes is the result type of the platform_product
// service convert method.
type ConvertPlatformProductsRes struct {
	// data
	Data []*ConvertPlatformProductsResData
	// code
	Code int
	// message
	Message string
}

// ConvertPlatformProductsResData
type ConvertPlatformProductsResData struct {
	// id
	ID int32
	// success
	Success bool
	// message
	Message string
}

// GetListing is the payload type of the platform_product service
// platform_product method.
type GetListing struct {
	// current
	Current *int
	// page_size
	PageSize *int
	// name
	Name *string
	// platform_status
	PlatformStatus *int
	// id
	ID *int32
	// listing_sku
	ListingSku *string
	// sku
	Sku *string
	// is_mapping
	IsMapping *int
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// Listing describes the listing
type Listing struct {
	// listing sku
	ListingSku *string
	// barcode
	Barcode *string
	// name
	Name *string
	// images
	Images []string
	// vendor
	Vendor *string
	// platform status
	PlatformStatus *int
	// id
	ID *int32
	// store
	Store *Store
	// mappings
	Mappings []*Mapping
	// is_mapping
	IsMapping *bool
}

// Mappings describes the Mappings
type Mapping struct {
	// id
	ID int32
	// platform_product_id
	PlatformProductID int32
	// product_id
	ProductID int32
	// product_sku
	ProductSku string
	// qty
	Qty int32
	// product_name
	ProductName string
	// images
	Images []string
}

// MetaData describes the MetaData
type MetaData struct {
	// current
	Current int
	// page_size
	PageSize int
	// total
	Total int
}

// MultiProduct describes the create multi product
type MultiPlatformProduct struct {
	// MetaData info
	Meta *MetaData
	// product info
	List []*Listing
}

// MultiPlatformProductRsp is the result type of the platform_product service
// platform_product method.
type MultiPlatformProductRsp struct {
	// data
	Data *MultiPlatformProduct
	// code
	Code int
	// message
	Message string
}

// Store describes the store
type Store struct {
	// id
	ID int64
	// name
	Name string
	// platform
	Platform string
}

// UpdateMappingsProduct
type UpdateMappingsProduct struct {
	// product_id
	ProductID int32
	// qty
	Qty int32
}

// UpdateMappingsReq is the payload type of the platform_product service
// mappings method.
type UpdateMappingsReq struct {
	// platform_product_ids
	PlatformProductIds []int32
	// products
	Products []*UpdateMappingsProduct
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// UpdateMappingsRes is the result type of the platform_product service
// mappings method.
type UpdateMappingsRes struct {
	// data
	Data interface{}
	// code
	Code int
	// message
	Message string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
