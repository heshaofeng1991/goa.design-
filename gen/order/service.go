// Code generated by goa v3.6.2, DO NOT EDIT.
//
// order service
//
// Command:
// $ goa gen goa/design -o ./

package order

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The order service performs operations on order
type Service interface {
	// CreateInboundOrder implements create_inbound_order.
	CreateInboundOrder(context.Context, *InboundOrder) (res *InboundOrderRsp, err error)
	// UpdateInboundOrder implements update_inbound_order.
	UpdateInboundOrder(context.Context, *InboundOrder) (res *UpdateResponse, err error)
	// CreateOutboundOrder implements create_outbound_order.
	CreateOutboundOrder(context.Context, *OutboundOrder) (res *OutboundOrderRsp, err error)
	// UpdateOutboundOrder implements update_outbound_order.
	UpdateOutboundOrder(context.Context, *OutboundOrder) (res *UpdateResponse, err error)
	// CreatePickupOrder implements create_pickup_order.
	CreatePickupOrder(context.Context, *PickupOrder) (res *PickupOrderRsp, err error)
	// GetInboundOrder implements get_inbound_order.
	GetInboundOrder(context.Context, *GetOrder) (res []*InboundOrderResponse, err error)
	// GetOutboundOrder implements get_outbound_order.
	GetOutboundOrder(context.Context, *GetOrder) (res []*OrderRsp, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "order"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [7]string{"create_inbound_order", "update_inbound_order", "create_outbound_order", "update_outbound_order", "create_pickup_order", "get_inbound_order", "get_outbound_order"}

// GetOrder is the payload type of the order service get_inbound_order method.
type GetOrder struct {
	// client_order_id
	ClientOrderID string
}

// InboundOrder is the payload type of the order service create_inbound_order
// method.
type InboundOrder struct {
	// Customer Order ID
	CustomerOrderID string
	// warehouse id
	WarehouseID int64
	// customer code
	CustomerCode string
	// tracking number
	TrackingNumber string
	// requested pickup at
	RequestedPickupAt string
	// estimated arrival at
	EstimatedArrivalAt string
	// inbound order items
	Items []*Item
	// delivery mode(1 direct，2 warehouse)
	Type int
	// address
	Address *ShippingAddress
	// is pickup
	IsPickup bool
	// description
	Description string
	// inbound order id
	ID *int32
}

// OrderRsp describes the order info
type InboundOrderResponse struct {
	// client order id
	ClientOrderID string
	// order status(1 准备揽件 2 运输中 3 已到库)
	Status int
	// platform order id
	PlatformOrderID int64
	// tracking number
	TrackingNumber string
	// tracking url
	TrackingURL string
	// items
	Items []*Item
	// timestamp
	Timestamp string
}

// InboundOrderRsp is the result type of the order service create_inbound_order
// method.
type InboundOrderRsp struct {
	// inbound order id
	InboundOrderID *int64
	// label url
	LabelURL *string
}

// InboundOrderItems describes the inbound order items
type Item struct {
	// product name
	ProductName string
	// product sku
	ProductSku string
	// barcode
	Barcode string
	// quality
	Qty int
}

// OrderRsp describes the order info
type OrderRsp struct {
	// client order id
	ClientOrderID string
	// order status
	Status int
	// platform order id
	PlatformOrderID int64
	// tracking number
	TrackingNumber string
	// tracking url
	TrackingURL string
	// items
	Items []*OutboundOrderItem
}

// OutboundOrder is the payload type of the order service create_outbound_order
// method.
type OutboundOrder struct {
	// customer order id
	CustomerOrderID string
	// customer code
	CustomerCode string
	// total price
	TotalPrice float64
	// currency
	Currency string
	// customer tariff number
	CustomerTariffNumber string
	// customer tariff number of type
	CustomerTariffNumberType int
	// enable prepay tariff
	EnablePrepayTariff bool
	// shipping type(1 Economic, 2 Fastest, 3 Recommended)
	ShippingType int
	// receiver info
	ReceiverInfo *ShippingAddress
	// order items
	Items []*OutboundOrderItem
	// channel id
	ChannelID int
	// description
	Description string
	// 入库单ID
	InboundOrderID int64
	// delivery mode(1 direct，2 warehouse)
	Type int
	// outbound order id
	ID *int32
	// package id
	PackageID *int64
}

type OutboundOrderItem struct {
	// product name
	ProductName string
	// product SKU
	ProductSku string
	// product price
	ProductPrice float64
	// 产品数量
	Qty int
	// hs code
	HsCode string
	// declared cn name
	DeclaredCnName string
	// declared en name
	DeclaredEnName string
	// declared value in usd
	DeclaredValueInUsd float64
	// product weight
	ProductWeight float64
	// product length
	ProductLength int
	// product width
	ProductWidth int
	// product height
	ProductHeight int
	// product attributes
	ProductAttributes []string
	// 产品barcode
	Barcode string
	// declared value in eur（€）
	DeclaredValueInEur float64
}

// OutboundOrderRsp is the result type of the order service
// create_outbound_order method.
type OutboundOrderRsp struct {
	// outbound order id
	OutboundOrderID *int64
	// tracking number
	TrackingNumber *string
}

// PickupOrder is the payload type of the order service create_pickup_order
// method.
type PickupOrder struct {
	// shipping at
	RequestedPickupAt string
	// inbound order items
	Items []*Item
	// address
	Address *ShippingAddress
	// delivery mode(1 direct，2 warehouse)
	Type int
	// customer code
	CustomerCode string
}

// PickupOrderRsp is the result type of the order service create_pickup_order
// method.
type PickupOrderRsp struct {
	// error message
	ErrorMsg string
}

// ShippingAddress describes the receiver address
type ShippingAddress struct {
	// First name
	FirstName string
	// Last name
	LastName string
	// Phone number
	PhoneNumber string
	// Country Name
	CountryName string
	// Country code
	CountryCode string
	// State Name
	StateName string
	// State code
	StateCode string
	// Address Line 1
	Address1 string
	// Address Line 2
	Address2 string
	// City Name
	CityName string
	// ZIP code
	ZipCode string
	// name
	Name *string
}

// UpdateResponse is the result type of the order service update_inbound_order
// method.
type UpdateResponse struct {
	// status
	Status int32
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
