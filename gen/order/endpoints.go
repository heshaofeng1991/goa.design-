// Code generated by goa v3.6.2, DO NOT EDIT.
//
// order endpoints
//
// Command:
// $ goa gen goa/design -o ./

package order

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "order" service endpoints.
type Endpoints struct {
	CreateInboundOrder  goa.Endpoint
	UpdateInboundOrder  goa.Endpoint
	CreateOutboundOrder goa.Endpoint
	UpdateOutboundOrder goa.Endpoint
	CreatePickupOrder   goa.Endpoint
	GetInboundOrder     goa.Endpoint
	GetOutboundOrder    goa.Endpoint
}

// NewEndpoints wraps the methods of the "order" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		CreateInboundOrder:  NewCreateInboundOrderEndpoint(s),
		UpdateInboundOrder:  NewUpdateInboundOrderEndpoint(s),
		CreateOutboundOrder: NewCreateOutboundOrderEndpoint(s),
		UpdateOutboundOrder: NewUpdateOutboundOrderEndpoint(s),
		CreatePickupOrder:   NewCreatePickupOrderEndpoint(s),
		GetInboundOrder:     NewGetInboundOrderEndpoint(s),
		GetOutboundOrder:    NewGetOutboundOrderEndpoint(s),
	}
}

// Use applies the given middleware to all the "order" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.CreateInboundOrder = m(e.CreateInboundOrder)
	e.UpdateInboundOrder = m(e.UpdateInboundOrder)
	e.CreateOutboundOrder = m(e.CreateOutboundOrder)
	e.UpdateOutboundOrder = m(e.UpdateOutboundOrder)
	e.CreatePickupOrder = m(e.CreatePickupOrder)
	e.GetInboundOrder = m(e.GetInboundOrder)
	e.GetOutboundOrder = m(e.GetOutboundOrder)
}

// NewCreateInboundOrderEndpoint returns an endpoint function that calls the
// method "create_inbound_order" of service "order".
func NewCreateInboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*InboundOrder)
		return s.CreateInboundOrder(ctx, p)
	}
}

// NewUpdateInboundOrderEndpoint returns an endpoint function that calls the
// method "update_inbound_order" of service "order".
func NewUpdateInboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*InboundOrder)
		return s.UpdateInboundOrder(ctx, p)
	}
}

// NewCreateOutboundOrderEndpoint returns an endpoint function that calls the
// method "create_outbound_order" of service "order".
func NewCreateOutboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*OutboundOrder)
		return s.CreateOutboundOrder(ctx, p)
	}
}

// NewUpdateOutboundOrderEndpoint returns an endpoint function that calls the
// method "update_outbound_order" of service "order".
func NewUpdateOutboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*OutboundOrder)
		return s.UpdateOutboundOrder(ctx, p)
	}
}

// NewCreatePickupOrderEndpoint returns an endpoint function that calls the
// method "create_pickup_order" of service "order".
func NewCreatePickupOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PickupOrder)
		return s.CreatePickupOrder(ctx, p)
	}
}

// NewGetInboundOrderEndpoint returns an endpoint function that calls the
// method "get_inbound_order" of service "order".
func NewGetInboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetOrder)
		return s.GetInboundOrder(ctx, p)
	}
}

// NewGetOutboundOrderEndpoint returns an endpoint function that calls the
// method "get_outbound_order" of service "order".
func NewGetOutboundOrderEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GetOrder)
		return s.GetOutboundOrder(ctx, p)
	}
}
