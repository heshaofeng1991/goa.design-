// Code generated by goa v3.6.2, DO NOT EDIT.
//
// product endpoints
//
// Command:
// $ goa gen goa/design -o ./

package product

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "product" service endpoints.
type Endpoints struct {
	BatchesCreateProduct goa.Endpoint
	UpdateProduct        goa.Endpoint
	GenerateBarcode      goa.Endpoint
	GenerateToken        goa.Endpoint
}

// NewEndpoints wraps the methods of the "product" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		BatchesCreateProduct: NewBatchesCreateProductEndpoint(s),
		UpdateProduct:        NewUpdateProductEndpoint(s),
		GenerateBarcode:      NewGenerateBarcodeEndpoint(s),
		GenerateToken:        NewGenerateTokenEndpoint(s),
	}
}

// Use applies the given middleware to all the "product" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.BatchesCreateProduct = m(e.BatchesCreateProduct)
	e.UpdateProduct = m(e.UpdateProduct)
	e.GenerateBarcode = m(e.GenerateBarcode)
	e.GenerateToken = m(e.GenerateToken)
}

// NewBatchesCreateProductEndpoint returns an endpoint function that calls the
// method "batches_create_product" of service "product".
func NewBatchesCreateProductEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*MultiProduct)
		return s.BatchesCreateProduct(ctx, p)
	}
}

// NewUpdateProductEndpoint returns an endpoint function that calls the method
// "update_product" of service "product".
func NewUpdateProductEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*Product)
		return s.UpdateProduct(ctx, p)
	}
}

// NewGenerateBarcodeEndpoint returns an endpoint function that calls the
// method "generate_barcode" of service "product".
func NewGenerateBarcodeEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*BarCode)
		return s.GenerateBarcode(ctx, p)
	}
}

// NewGenerateTokenEndpoint returns an endpoint function that calls the method
// "generate_token" of service "product".
func NewGenerateTokenEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*GenerateTokenReq)
		return s.GenerateToken(ctx, p)
	}
}
