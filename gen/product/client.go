// Code generated by goa v3.6.2, DO NOT EDIT.
//
// product client
//
// Command:
// $ goa gen goa/design -o ./

package product

import (
	"context"
	"io"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "product" service client.
type Client struct {
	BatchesCreateProductEndpoint goa.Endpoint
	UpdateProductEndpoint        goa.Endpoint
	ExportProductEndpoint        goa.Endpoint
	DownloadTemplatesEndpoint    goa.Endpoint
	UploadProductEndpoint        goa.Endpoint
	UploadProductUpdateEndpoint  goa.Endpoint
	GenerateBarcodeEndpoint      goa.Endpoint
	ProductsQueryEndpoint        goa.Endpoint
	ProductDetailEndpoint        goa.Endpoint
}

// NewClient initializes a "product" service client given the endpoints.
func NewClient(batchesCreateProduct, updateProduct, exportProduct, downloadTemplates, uploadProduct, uploadProductUpdate, generateBarcode, productsQuery, productDetail goa.Endpoint) *Client {
	return &Client{
		BatchesCreateProductEndpoint: batchesCreateProduct,
		UpdateProductEndpoint:        updateProduct,
		ExportProductEndpoint:        exportProduct,
		DownloadTemplatesEndpoint:    downloadTemplates,
		UploadProductEndpoint:        uploadProduct,
		UploadProductUpdateEndpoint:  uploadProductUpdate,
		GenerateBarcodeEndpoint:      generateBarcode,
		ProductsQueryEndpoint:        productsQuery,
		ProductDetailEndpoint:        productDetail,
	}
}

// BatchesCreateProduct calls the "batches_create_product" endpoint of the
// "product" service.
func (c *Client) BatchesCreateProduct(ctx context.Context, p *MultiProduct) (res *MultiProductRsp, err error) {
	var ires interface{}
	ires, err = c.BatchesCreateProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*MultiProductRsp), nil
}

// UpdateProduct calls the "update_product" endpoint of the "product" service.
func (c *Client) UpdateProduct(ctx context.Context, p *Product) (res *UpdateResponse, err error) {
	var ires interface{}
	ires, err = c.UpdateProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UpdateResponse), nil
}

// ExportProduct calls the "export_product" endpoint of the "product" service.
// ExportProduct may return the following errors:
//	- "internal_error" (type *goa.ServiceError): Fault while processing download.
//	- error: internal error
func (c *Client) ExportProduct(ctx context.Context, p *ProductQueryPayload) (res *ExportProductResult, resp io.ReadCloser, err error) {
	var ires interface{}
	ires, err = c.ExportProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*ExportProductResponseData)
	return o.Result, o.Body, nil
}

// DownloadTemplates calls the "download_templates" endpoint of the "product"
// service.
// DownloadTemplates may return the following errors:
//	- "internal_error" (type *goa.ServiceError): Fault while processing download.
//	- error: internal error
func (c *Client) DownloadTemplates(ctx context.Context, p *DownloadTemplatesReq) (res *ExportProductResult, resp io.ReadCloser, err error) {
	var ires interface{}
	ires, err = c.DownloadTemplatesEndpoint(ctx, p)
	if err != nil {
		return
	}
	o := ires.(*DownloadTemplatesResponseData)
	return o.Result, o.Body, nil
}

// UploadProduct calls the "upload_product" endpoint of the "product" service.
func (c *Client) UploadProduct(ctx context.Context, p *UploadProductPayload) (res *UploadProductResponse, err error) {
	var ires interface{}
	ires, err = c.UploadProductEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UploadProductResponse), nil
}

// UploadProductUpdate calls the "upload_product_update" endpoint of the
// "product" service.
func (c *Client) UploadProductUpdate(ctx context.Context, p *UploadProductPayload) (res *UploadProductResponse, err error) {
	var ires interface{}
	ires, err = c.UploadProductUpdateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UploadProductResponse), nil
}

// GenerateBarcode calls the "generate_barcode" endpoint of the "product"
// service.
func (c *Client) GenerateBarcode(ctx context.Context, p *AuthToken) (res *BarCodeRsp, err error) {
	var ires interface{}
	ires, err = c.GenerateBarcodeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*BarCodeRsp), nil
}

// ProductsQuery calls the "products_query" endpoint of the "product" service.
func (c *Client) ProductsQuery(ctx context.Context, p *ProductsQueryReq) (res *ProductsQueryRsp, err error) {
	var ires interface{}
	ires, err = c.ProductsQueryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ProductsQueryRsp), nil
}

// ProductDetail calls the "product_detail" endpoint of the "product" service.
func (c *Client) ProductDetail(ctx context.Context, p *ProductDetailReq) (res *ProductDetailRsp, err error) {
	var ires interface{}
	ires, err = c.ProductDetailEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ProductDetailRsp), nil
}
