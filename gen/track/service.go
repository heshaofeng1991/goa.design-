// Code generated by goa v3.6.2, DO NOT EDIT.
//
// track service
//
// Command:
// $ goa gen goa/design -o ./

package track

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The track service performs operations on track order status
type Service interface {
	// Get implements get.
	Get(context.Context, *GetTrack) (res []*Track, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "track"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"get"}

// GetTrack is the payload type of the track service get method.
type GetTrack struct {
	// tracking number of order
	TrackingNumber string
	// type(1 tracking_number 2 order_id)
	Type int
}

type Track struct {
	// tracking number of order
	TrackingNumber string
	// tracking url
	TrackingURL *string
	// tracking details
	Details []*TrackItem
	// status
	Status int
	// type
	Type int
	// order_id
	OrderID *string
}

type TrackItem struct {
	// tracking description
	Content *string
	// tracking timestamp
	Timestamp *string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
