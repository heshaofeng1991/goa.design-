// Code generated by goa v3.6.2, DO NOT EDIT.
//
// integrations client
//
// Command:
// $ goa gen goa/design -o ./

package integrations

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "integrations" service client.
type Client struct {
	ListEndpoint      goa.Endpoint
	AuthorizeEndpoint goa.Endpoint
}

// NewClient initializes a "integrations" service client given the endpoints.
func NewClient(list, authorize goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:      list,
		AuthorizeEndpoint: authorize,
	}
}

// List calls the "list" endpoint of the "integrations" service.
func (c *Client) List(ctx context.Context, p *AuthToken) (res *IntegrationListResult, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*IntegrationListResult), nil
}

// Authorize calls the "authorize" endpoint of the "integrations" service.
func (c *Client) Authorize(ctx context.Context, p *Authorize2) (res *AuthorizePlatformRsp, err error) {
	var ires interface{}
	ires, err = c.AuthorizeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*AuthorizePlatformRsp), nil
}
