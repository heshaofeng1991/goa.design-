// Code generated by goa v3.6.2, DO NOT EDIT.
//
// quote client
//
// Command:
// $ goa gen goa/design -o ./

package quote

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "quote" service client.
type Client struct {
	GetEndpoint  goa.Endpoint
	PostEndpoint goa.Endpoint
}

// NewClient initializes a "quote" service client given the endpoints.
func NewClient(get, post goa.Endpoint) *Client {
	return &Client{
		GetEndpoint:  get,
		PostEndpoint: post,
	}
}

// Get calls the "get" endpoint of the "quote" service.
func (c *Client) Get(ctx context.Context, p *GetQuote) (res *QuoteRsp, err error) {
	var ires interface{}
	ires, err = c.GetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*QuoteRsp), nil
}

// Post calls the "post" endpoint of the "quote" service.
func (c *Client) Post(ctx context.Context, p *PostQuote) (res *UserRsp, err error) {
	var ires interface{}
	ires, err = c.PostEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UserRsp), nil
}
