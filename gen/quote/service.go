// Code generated by goa v3.6.2, DO NOT EDIT.
//
// quote service
//
// Command:
// $ goa gen goa/design -o ./

package quote

import (
	"context"

	goa "goa.design/goa/v3/pkg"
	"goa.design/goa/v3/security"
)

// The quote service performs operations on quotation
type Service interface {
	// Get implements get.
	Get(context.Context, *GetQuote) (res *QuoteRsp, err error)
	// Post implements post.
	Post(context.Context, *PostQuote) (res *UserRsp, err error)
}

// Auther defines the authorization functions to be implemented by the service.
type Auther interface {
	// JWTAuth implements the authorization logic for the JWT security scheme.
	JWTAuth(ctx context.Context, token string, schema *security.JWTScheme) (context.Context, error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "quote"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [2]string{"get", "post"}

// GetQuote is the payload type of the quote service get method.
type GetQuote struct {
	// Origin country code (two-letter codes)
	OriginCountry string
	// Destination country code (two-letter codes)
	DestCountry string
	// State of destination country
	DestState string
	// Destination post code
	DestZipCode string
	// total weight of the package, unit(g)
	Weight int
	// the length of the package, unit(mm)
	Length int
	// the width of the package, unit(mm)
	Width int
	// the height of the package, unit(mm)
	Height int
	// Product attributes
	ProductAttributes []string
	// address of factory
	Factory *string
	// date
	Date *string
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

// PostQuote is the payload type of the quote service post method.
type PostQuote struct {
	// channel cost id
	ID int32
	// delivery area
	DeliveryArea int
	// delivery country code
	DeliveryCountryCode string
	// delivery country name
	DeliveryCountryName string
	// delivery province code
	DeliveryProvinceCode *string
	// delivery province name
	DeliveryProvinceName *string
	// delivery city code
	DeliveryCityCode *string
	// delivery city name
	DeliveryCityName *string
	// dest area
	DestArea int
	// dest country code
	DestCountryCode string
	// dest country name
	DestCountryName string
	// dest province code
	DestProvinceCode *string
	// dest province name
	DestProvinceName *string
	// dest city code
	DestCityCode *string
	// dest city name
	DestCityName *string
	// Authorization
	Authorization *string
	// JWT used for authentication
	Token *string
}

type Quote struct {
	// Channel Display Name
	ChannelName string
	// Channel ID
	ChannelID int32
	// Channel type
	Type int
	// Min Normal Days
	MinNormalDays int32
	// Max Normal Days
	MaxNormalDays int32
	// Total cost (decimal(15,2))
	TotalCost float64
	Currency  string
	// weight(unit g)
	Weight int
}

type QuoteInfo struct {
	// fees
	List []*Quote
}

// QuoteRsp is the result type of the quote service get method.
type QuoteRsp struct {
	// data
	Data *QuoteInfo
	// code
	Code int
	// message
	Message string
}

type UserData struct {
	// status
	Status int
}

// UserRsp is the result type of the quote service post method.
type UserRsp struct {
	// data
	Data *UserData
	// code
	Code int
	// message
	Message string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
