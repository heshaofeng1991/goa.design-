// Code generated by goa v3.6.2, DO NOT EDIT.
//
// auth service
//
// Command:
// $ goa gen goa/design -o ./

package auth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The auth service
type Service interface {
	// GenerateToken implements generate_token.
	GenerateToken(context.Context, *GenerateTokenReq) (res *GenerateTokenRsp, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "auth"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [1]string{"generate_token"}

// GenerateTokenData describes the response of generate token
type GenerateTokenData struct {
	// token
	Token string
}

// GenerateTokenReq is the payload type of the auth service generate_token
// method.
type GenerateTokenReq struct {
	// user_id
	ID int64
	// tenantID
	TenantID int64
}

// GenerateTokenRsp is the result type of the auth service generate_token
// method.
type GenerateTokenRsp struct {
	// data
	Data *GenerateTokenData
	// code
	Code int
	// message
	Message string
}

// MakeUnauthorized builds a goa.ServiceError from an error.
func MakeUnauthorized(err error) *goa.ServiceError {
	return &goa.ServiceError{
		Name:    "Unauthorized",
		ID:      goa.NewErrorID(),
		Message: err.Error(),
	}
}
